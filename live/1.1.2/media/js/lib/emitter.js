"use strict";System.register([],function(_export,_context){"use strict";var _createClass,Emitter;function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}return{setters:[],execute:function(){_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();Emitter=function(){function Emitter(){_classCallCheck(this,Emitter);this.ref=0;this.events={}}// emit calls any functions which are mapped to the supplied string. All parameters after the first are passed to each
// function that is called.
_createClass(Emitter,[{key:"emit",value:function emit(event){if(!this.events[event]){return false}var evt=this.events[event];for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key]}for(var i in evt){evt[i].apply(evt,args)}return true}},{key:"on",value:function on(event,callback){if(!this.events[event]){this.events[event]={}}var ref="evt_"+ ++this.ref;this.events[event][ref]=callback;return ref}},{key:"off",value:function off(event,reference){if(!this.events[event]){return false}delete this.events[event][reference];return true}}]);return Emitter}();_export("default",Emitter);;}}});