"use strict";System.register(["react","./input/text","./input/checkbox","./input/select","./panel-list-edit","./panel-talent-edit","./panel-weapon-edit","./panel-code","./panel-skill-edit","lib/dispatcher","lib/config","lib/utils","lib/string","lib/list"],function(_export,_context){"use strict";var React,TextInput,TextArea,Checkbox,Select,PanelListEdit,PanelTalentEdit,PanelWeaponEdit,PanelCode,PanelSkillEdit,dispatcher,CONFIG,characteristics,id,isNumeric,escapeHTML,unescapeHTML,sentenceCase,sortByProperty,_slicedToArray,_createClass,RANGED,MELEE,CharacterEdit;function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return call&&(typeof call==="object"||typeof call==="function")?call:self}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}return{setters:[function(_react){React=_react.default},function(_inputText){TextInput=_inputText.TextInput;TextArea=_inputText.TextArea},function(_inputCheckbox){Checkbox=_inputCheckbox.default},function(_inputSelect){Select=_inputSelect.default},function(_panelListEdit){PanelListEdit=_panelListEdit.default},function(_panelTalentEdit){PanelTalentEdit=_panelTalentEdit.default},function(_panelWeaponEdit){PanelWeaponEdit=_panelWeaponEdit.default},function(_panelCode){PanelCode=_panelCode.default},function(_panelSkillEdit){PanelSkillEdit=_panelSkillEdit.default},function(_libDispatcher){dispatcher=_libDispatcher.default},function(_libConfig){CONFIG=_libConfig},function(_libUtils){characteristics=_libUtils.characteristics},function(_libString){id=_libString.id;isNumeric=_libString.isNumeric;escapeHTML=_libString.escapeHTML;unescapeHTML=_libString.unescapeHTML;sentenceCase=_libString.sentenceCase},function(_libList){sortByProperty=_libList.sortByProperty}],execute:function(){_slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"])_i["return"]()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError("Invalid attempt to destructure non-iterable instance")}}}();_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();RANGED=1;MELEE=0;CharacterEdit=function(_React$Component){_inherits(CharacterEdit,_React$Component);function CharacterEdit(props){_classCallCheck(this,CharacterEdit);var _this=_possibleConstructorReturn(this,(CharacterEdit.__proto__||Object.getPrototypeOf(CharacterEdit)).call(this,props));_this.escapeFields=["name","description","notes","gear"];_this.types=[CONFIG.MINION,CONFIG.RIVAL,CONFIG.NEMESIS];var baseCharacter={"name":"","description":"","notes":"","type":CONFIG.MINION,"characteristics":{},"derived":{},"skills":[],"talents":[],"abilities":[],"weapons":[],"gear":"","tags":[]};var editingCharacter=JSON.parse(JSON.stringify(Object.assign(baseCharacter,props.character)));editingCharacter.derived.defence=editingCharacter.derived.defence||[0,0];editingCharacter.tags=[];// for now remove any tags as only "source:Mine" will be set
_this.escapeFields.forEach(function(key){return editingCharacter[key]=unescapeHTML(editingCharacter[key])});_this.state={character:editingCharacter,editingWeapons:null,editingTalents:null,editingAbilities:null,showAddSkill:false};return _this}_createClass(CharacterEdit,[{key:"save",value:function save(){var character=this.state.character;// create id for new characters
if(!character.id){character.id=CONFIG.ADVERSARY_ID+id(character.name)}// prefix id for editing an existing character
if(!character.id.startsWith(CONFIG.ADVERSARY_ID)){character.id=CONFIG.ADVERSARY_ID+character.id}// escape HTML characters
this.escapeFields.forEach(function(key){return character[key]=escapeHTML(character[key])});// remove skills with a zero value
if(!this.isMinion()){Object.keys(character.skills).forEach(function(skill){if(character.skills[skill]==""){delete character.skills[skill]}})}dispatcher.dispatch(CONFIG.ADVERSARY_SAVE,character)}},{key:"cancel",value:function cancel(){dispatcher.dispatch(CONFIG.ADVERSARY_CANCEL)}},{key:"setDerivedValue",value:function setDerivedValue(attr1,attr2){var _this2=this;return function(value){var character=_this2.state.character;character[attr1][attr2]=value;_this2.setState({character:character})}}},{key:"setValue",value:function setValue(attr){var _this3=this;return function(value){var character=_this3.state.character;character[attr]=value;_this3.setState({character:character})}}},{key:"setType",value:function setType(type){var character=this.state.character;if(character.type==CONFIG.MINION){// changing from a minion to something else so convert array of skills to object keys with a value of 1
var newSkills={};character.skills.forEach(function(s){return newSkills[s]=1});character.skills=newSkills}else if(type==CONFIG.MINION){// converting to a minion so convert skill object keys to an array to mark them as checked
character.skills=Object.keys(character.skills)}character.type=type;this.setState({character:character})}},{key:"setDefence",value:function setDefence(type){var _this4=this;return function(value){var character=_this4.state.character;character.derived.defence[type]=value;_this4.setState({character:character})}}},{key:"addHandler",value:function addHandler(attr){var _this5=this;return function(item){var character=_this5.state.character;var key="editing"+sentenceCase(attr);// remove the item if it's already in the array
if(_this5.state[key]){character[attr]=character[attr].filter(function(f){return f.id!=item.id})}character[attr].push(item);_this5.setState(_defineProperty({character:character},key,null))}}},{key:"removeHandler",value:function removeHandler(attr){var _this6=this;return function(index){var character=_this6.state.character;character[attr].splice(index,1);_this6.setState({character:character})}}},{key:"editHandler",value:function editHandler(attr){var _this7=this;return function(index){var character=_this7.state.character;var item=character[attr][index];_this7.setState(_defineProperty({},"editing"+sentenceCase(attr),item))}}},{key:"toggleMinionSkill",value:function toggleMinionSkill(skill){var character=this.state.character;if(character.skills.indexOf(skill)==-1){character.skills.push(skill)}else{character.skills.splice(character.skills.indexOf(skill),1)}this.setState({character:character})}},{key:"setTags",value:function setTags(val){var character=this.state.character;if(character.tags.indexOf(val)==-1){character.tags.push(val)}else{character.tags.splice(character.tags.indexOf(val),1)}this.setState({character:character})}},{key:"isNemesis",value:function isNemesis(){return this.state.character.type==CONFIG.NEMESIS}},{key:"isMinion",value:function isMinion(){return this.state.character.type==CONFIG.MINION}},{key:"showAddSkill",value:function showAddSkill(){this.setState({showAddSkill:true})}},{key:"canSave",value:function canSave(){var _this8=this;var derived=["soak","wounds"];if(this.isNemesis()){derived.push("strain")}var required=characteristics.length+derived.length;return[].concat(_toConsumableArray(characteristics.map(function(c){return _this8.state.character.characteristics[c]})),_toConsumableArray(derived.map(function(d){return _this8.state.character.derived[d]}))).filter(function(f){return f!=""&&isNumeric(f)}).length==required}},{key:"render",value:function render(){var _this9=this;var character=this.state.character;if(!character){return null}var skills=this.isMinion()?this.props.skills.map(function(s){return React.createElement(Checkbox,{label:s.name,checked:character.skills.indexOf(s.name)!=-1,handler:_this9.toggleMinionSkill.bind(_this9)})}):this.props.skills.map(function(s){return React.createElement(TextInput,{label:s.name,value:character.skills[s.name],handler:_this9.setDerivedValue("skills",s.name).bind(_this9),numeric:true})});var _map=["talents","abilities"].map(function(key){// remove rank from the end of the name
var noRanks=character[key].map(function(t){return t.name||t}).map(function(t){return t.replace(/\s\d+$/,"")});return _this9.props.talents.filter(function(t){return t.type==key}).filter(function(t){return noRanks.indexOf(t.name)==-1}).sort(sortByProperty("name"))}),_map2=_slicedToArray(_map,2),talents=_map2[0],abilities=_map2[1];var weapons=this.props.weapons.all().sort(sortByProperty("name"));return React.createElement("div",{id:"edit"},React.createElement("h1",null,"Edit Character",React.createElement("svg",{title:"Cancel edit",onClick:this.cancel.bind(this)},React.createElement("use",{xlinkHref:"#icon-cross"}))),React.createElement("div",{className:"scrollable"},React.createElement(TextInput,{label:"Name",value:character.name,handler:this.setValue("name").bind(this),required:true}),React.createElement(Select,{label:"Type",value:character.type,values:this.types,handler:this.setType.bind(this)}),React.createElement(TextArea,{label:"Description",value:character.description,handler:this.setValue("description").bind(this)}),React.createElement(TextArea,{label:"Notes",value:character.notes,handler:this.setValue("notes").bind(this)}),React.createElement("div",{className:"edit-panel"},React.createElement("p",{className:"edit-panel"},"You can use simple Markdown commands in the Description and Notes fields to create ",React.createElement("em",null,"*italic*"),", ",React.createElement("strong",null,"**bold**"),", or ",React.createElement("code",null,"`code`")," text.")),React.createElement("div",{className:"edit-panel"},React.createElement("h2",null,"Characteristics"),characteristics.map(function(c){return React.createElement(TextInput,{label:c,value:character.characteristics[c],handler:_this9.setDerivedValue("characteristics",c).bind(_this9),required:true,numeric:true})})),React.createElement("div",{className:"edit-panel"},React.createElement("h2",null,"Derived Characteristics"),React.createElement(TextInput,{label:"Soak",value:character.derived.soak,handler:this.setDerivedValue("derived","soak").bind(this),required:true,numeric:true}),React.createElement(TextInput,{label:"Wound Threshold",value:character.derived.wounds,handler:this.setDerivedValue("derived","wounds").bind(this),required:true,numeric:true}),this.isNemesis()?React.createElement(TextInput,{label:"Strain Threshold",value:character.derived.strain,handler:this.setDerivedValue("derived","strain").bind(this),required:true,numeric:true}):null,React.createElement(TextInput,{label:"Melee Defence",value:character.derived.defence[MELEE],handler:this.setDefence(MELEE).bind(this),numeric:true}),React.createElement(TextInput,{label:"Ranged Defence",value:character.derived.defence[RANGED],handler:this.setDefence(RANGED).bind(this),numeric:true})),React.createElement("div",{className:"edit-panel"},React.createElement("h2",null,"Skills"),skills),React.createElement(PanelListEdit,{title:"Skills",hideTitle:true},React.createElement(PanelSkillEdit,null)),React.createElement(PanelListEdit,{title:"Weapons",list:character.weapons,remove:this.removeHandler("weapons").bind(this),edit:this.editHandler("weapons").bind(this),onClose:function onClose(){return _this9.setState({editingWeapons:null})}},React.createElement(PanelWeaponEdit,{list:weapons,skills:this.props.skills.filter(function(s){return s.type=="Combat"}),qualities:this.props.qualities,editing:this.state.editingWeapons,handler:this.addHandler("weapons").bind(this)})),React.createElement(PanelListEdit,{title:"Talents",list:character.talents,remove:this.removeHandler("talents").bind(this),edit:this.editHandler("talents").bind(this),onClose:function onClose(){return _this9.setState({editingTalents:null})}},React.createElement(PanelTalentEdit,{list:talents,title:"Talent",editing:this.state.editingTalents,handler:this.addHandler("talents").bind(this)})),React.createElement(PanelListEdit,{title:"Abilities",list:character.abilities,remove:this.removeHandler("abilities").bind(this),edit:this.editHandler("abilities").bind(this),onClose:function onClose(){return _this9.setState({editingAbilities:null})}},React.createElement(PanelTalentEdit,{list:abilities,title:"Ability",editing:this.state.editingAbilities,handler:this.addHandler("abilities").bind(this)})),React.createElement("div",{className:"edit-panel gear"},React.createElement("h2",null,"Gear"),React.createElement(TextArea,{label:"Gear",value:character.gear,handler:this.setValue("gear").bind(this)}),React.createElement(PanelCode,null))),React.createElement("div",{className:"row-buttons"},React.createElement("button",{className:"btn-save",disabled:!this.canSave(),onClick:this.save.bind(this)},"Save"),React.createElement("button",{className:"btn-cancel",onClick:this.cancel.bind(this)},"Cancel")))}}]);return CharacterEdit}(React.Component);_export("default",CharacterEdit)}}});