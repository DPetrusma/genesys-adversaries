"use strict";System.register(["react","lib/dom","lib/utils"],function(_export,_context){"use strict";var React,parent,symbolise,_createClass,PanelListEdit;function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return call&&(typeof call==="object"||typeof call==="function")?call:self}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}return{setters:[function(_react){React=_react.default},function(_libDom){parent=_libDom.parent},function(_libUtils){symbolise=_libUtils.symbolise}],execute:function(){_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();PanelListEdit=function(_React$Component){_inherits(PanelListEdit,_React$Component);function PanelListEdit(props){_classCallCheck(this,PanelListEdit);var _this=_possibleConstructorReturn(this,(PanelListEdit.__proto__||Object.getPrototypeOf(PanelListEdit)).call(this,props));_this.state={displayAddPanel:false};return _this}_createClass(PanelListEdit,[{key:"toggleAddPanel",value:function toggleAddPanel(){var newDisplay=!this.state.displayAddPanel;this.setState({displayAddPanel:newDisplay});// fire the close event if the sub-panel is now closed
if(!newDisplay&&this.props.onClose){this.props.onClose()}}},{key:"handler",value:function handler(type){var _this2=this;return function(evt){var node=parent(evt.target,"div");if(node&&_this2.props[type]){var index=node.getAttribute("data-index");_this2.props[type](index)}}}},{key:"edit",value:function edit(evt){this.setState({displayAddPanel:true});this.handler("edit")(evt)}},{key:"render",value:function render(){var _this3=this;var children=React.Children.map(this.props.children,function(child){return React.cloneElement(child,{close:_this3.toggleAddPanel.bind(_this3)})});var list=this.props.list||[];return React.createElement("div",{className:"edit-panel edit-list"},this.props.hideTitle?null:React.createElement("h2",null,this.props.title),list.map(function(item,index){return React.createElement("div",{className:"row-input","data-index":index},item.name?React.createElement("span",{className:"link",onClick:_this3.edit.bind(_this3)},item.name):React.createElement("span",null,item),React.createElement("svg",{className:"delete",onClick:_this3.handler("remove").bind(_this3)},React.createElement("use",{xlinkHref:"#icon-delete"})))}),this.state.displayAddPanel?React.createElement("div",null,React.createElement("span",{className:"btn close",title:"Close panel",onClick:this.toggleAddPanel.bind(this)},React.createElement("svg",null,React.createElement("use",{xlinkHref:"#icon-cross"}))," Close Panel")," ",children):React.createElement("button",{className:"btn-full",disabled:this.state.displayAddPanel,onClick:this.toggleAddPanel.bind(this)},"Add ",this.props.title))}}]);return PanelListEdit}(React.Component);_export("default",PanelListEdit)}}});